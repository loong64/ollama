ARG GOLANG_VERSION=1.23

FROM ghcr.io/loong64/golang:${GOLANG_VERSION}-trixie AS unified-builder

RUN apt-get update && \
    apt-get install -y ca-certificates ccache pigz patch wget && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

ARG APP_VERSION

ARG WORKDIR=/go/src/github.com/ollama/ollama
RUN git clone -b ${APP_VERSION} --depth=1 https://github.com/ollama/ollama ${WORKDIR}

ARG OLLAMA_SKIP_CUDA_GENERATE
ARG OLLAMA_FAST_BUILD
ENV GOARCH loong64
ENV CGO_ENABLED 1

ADD patch_loong64.patch /tmp/patch_loong64.patch

WORKDIR ${WORKDIR}

RUN --mount=type=cache,target=/root/.ccache \
    export VERSION=$(git describe --tags --first-parent --abbrev=7 --long --dirty --always | sed -e "s/^v//g") && \
    export GOFLAGS="'-ldflags=-w -s \"-X=github.com/ollama/ollama/version.Version=$VERSION\" \"-X=github.com/ollama/ollama/server.mode=release\"'" && \
    git apply /tmp/patch_loong64.patch && \
    make -j $(nproc) dist

RUN cd dist/linux-$GOARCH && \
    tar -cf - . | pigz --best > ../ollama-linux-$GOARCH.tgz

FROM ghcr.io/loong64/debian:trixie-slim

WORKDIR /opt/ollama

COPY --from=unified-builder /go/src/github.com/ollama/ollama/dist/ollama-linux-*.tgz /opt/ollama/dist/

VOLUME /dist

CMD cp -rf dist/* /dist/